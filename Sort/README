
📊 주요 정렬 알고리즘 비교표

알고리즘 이름               평균 시간복잡도        공간복잡도     안정성     주요 특징
----------------------------------------------------------------------------------------
버블 정렬 (Bubble Sort)    O(n²)              O(1)         ✅       인접한 원소를 반복 비교하여 정렬. 단순하지만 비효율적.
선택 정렬 (Selection Sort) O(n²)              O(1)         ❌       가장 작은 값을 선택하여 앞쪽에 배치. 비교 횟수는 일정함.
삽입 정렬 (Insertion Sort) O(n²)              O(1)         ✅       이미 정렬된 부분에 새 값을 삽입. 거의 정렬된 데이터에 유리.
병합 정렬 (Merge Sort)     O(n log n)         O(n)         ✅       분할 정복 기반. 항상 일정한 성능, 재귀 구조 사용.
퀵 정렬 (Quick Sort)       평균 O(n log n), 
                           최악 O(n²)         O(log n)     ❌       피벗을 중심으로 분할 정복. 평균 성능 매우 우수.
힙 정렬 (Heap Sort)        O(n log n)         O(1)         ❌       힙 자료구조 이용. 정렬된 순서를 바로 구성 가능.
계수 정렬 (Counting Sort)  O(n + k)           O(n + k)     ✅       정수 기반 정렬. 값의 범위가 작고 정수일 때 매우 빠름.
기수 정렬 (Radix Sort)     O(nk)              O(n + k)     ✅       자릿수를 기준으로 정렬. 숫자, 문자열 정렬에 유용.
버킷 정렬 (Bucket Sort)    O(n + k)           O(n + k)     ✅/❌     데이터를 여러 버킷에 분산 후 정렬. 균등 분포 데이터에 효과적.

----------------------------------------------------------------------------------------
참고:
- ✅ 안정 정렬: 동일한 값을 가진 원소들의 상대적 순서가 유지됨
- 공간복잡도는 추가 메모리 사용량 의미
- k는 값의 범위 (예: 계수 정렬에서 k = 최대값 - 최소값)
